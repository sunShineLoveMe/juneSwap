{"version":3,"sources":["nft/components/details/Details.tsx","nft/pages/asset/Asset.tsx"],"names":["DetailItemLabel","props","Box","as","fontSize","color","DetailItemValue","marginLeft","Detail","justifyContent","width","style","minWidth","Details","contractAddress","tokenId","metadataUrl","tokenType","totalSupply","blockchain","gap","md","sm","alignItems","flexWrap","href","target","rel","textDecoration","shortenAddress","className","bodySmall","slice","Asset","useParams","data","useQuery","fetchSingleAsset","asset","collection","externalLink"],"mappings":"+MAKMA,EAAkB,SAACC,GAAD,OAAqB,cAACC,EAAA,EAAD,aAAKC,GAAG,OAAOC,SAAS,KAAKC,MAAM,YAAeJ,KAEzFK,EAAkB,SAACL,GAAD,OAAqB,cAACC,EAAA,EAAD,aAAKC,GAAG,OAAOC,SAAS,KAAKG,WAAW,IAAIF,MAAM,aAAgBJ,KAEzGO,EAAS,SAACP,GAAD,OACb,cAAC,IAAD,aAAKQ,eAAe,gBAAgBC,MAAM,OAAOC,MAAO,CAAEC,SAAU,UAAeX,KAGxEY,EAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,gBACAC,EAFqB,EAErBA,QACAC,EAHqB,EAGrBA,YACAC,EAJqB,EAIrBA,UACAC,EALqB,EAKrBA,YACAC,EANqB,EAMrBA,WANqB,OAerB,eAAC,IAAD,CAAKC,IAAK,CAAEC,GAAI,KAAMC,GAAI,MAAQZ,MAAM,OAAOD,eAAe,gBAAgBc,WAAW,aAAaC,SAAS,OAA/G,UACE,eAAC,IAAD,CAAQd,MAAO,CAAEY,GAAI,OAAQD,GAAI,QAAUD,IAAI,KAA/C,UACE,eAAC,EAAD,WACE,cAAC,EAAD,iCACA,mBACEK,KAAI,qCAAgCX,GACpCY,OAAO,SACPC,IAAI,aACJhB,MAAO,CAAEiB,eAAgB,QAJ3B,SAME,cAAC,EAAD,UAAkBC,YAAef,UAGrC,eAAC,EAAD,WACE,cAAC,EAAD,wBACA,cAAC,EAAD,CAAiBgB,UAAWC,IAA5B,SAAwChB,OAEzCC,EACC,eAAC,EAAD,WACE,cAAC,EAAD,wBACA,mBAAGS,KAAMT,EAAaU,OAAO,SAASC,IAAI,aAAahB,MAAO,CAAEiB,eAAgB,QAAhF,SACE,eAAC,EAAD,WAAkBZ,EAAYgB,MAAM,EAAG,IAAvC,cAGF,QAGN,eAAC,IAAD,CAAQtB,MAAO,CAAEY,GAAI,OAAQD,GAAI,QAAUD,IAAI,KAA/C,UACE,eAAC,EAAD,WACE,cAAC,EAAD,6BACA,cAAC,EAAD,UAAkBH,OAEpB,eAAC,EAAD,WACE,cAAC,EAAD,4BACA,cAAC,EAAD,UAAkBC,OAEpB,eAAC,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,UAAkBC,c,SC7BXc,UA9BD,WACZ,MAA+CC,cAA/C,IAAQnB,eAAR,MAAkB,GAAlB,MAAsBD,uBAAtB,MAAwC,GAAxC,EAEQqB,EAASC,mBAAS,CAAC,cAAetB,EAAiBC,IAAU,kBACnEsB,YAAiB,CAAEvB,kBAAiBC,eAD9BoB,KAIJG,EAAQ,GACRC,EAAa,GAOjB,OALIJ,IACFG,EAAQH,EAAK,IAAM,GACnBI,EAAaJ,EAAK,IAAM,IAIxB,gCACG,IACD,cAAC,EAAD,CACErB,gBAAiBA,EACjBC,QAASA,EACTE,UAAWqB,EAAMrB,UACjBE,WAAW,WACXH,YAAasB,EAAME,aACnBtB,YAAaqB,EAAWrB","file":"static/js/43.bcfb7453.chunk.js","sourcesContent":["import { bodySmall } from '../../css/common.css'\nimport { shortenAddress } from '../../utils/address'\nimport { Box, BoxProps } from '../Box'\nimport { Column, Row } from '../Flex'\n\nconst DetailItemLabel = (props: BoxProps) => <Box as=\"span\" fontSize=\"14\" color=\"darkGray\" {...props} />\n\nconst DetailItemValue = (props: BoxProps) => <Box as=\"span\" fontSize=\"14\" marginLeft=\"4\" color=\"blackBlue\" {...props} />\n\nconst Detail = (props: BoxProps) => (\n  <Row justifyContent=\"space-between\" width=\"full\" style={{ minWidth: '224px' }} {...props} />\n)\n\nexport const Details = ({\n  contractAddress,\n  tokenId,\n  metadataUrl,\n  tokenType,\n  totalSupply,\n  blockchain,\n}: {\n  contractAddress: string\n  tokenId: string\n  metadataUrl: string\n  tokenType: string\n  totalSupply: number\n  blockchain: string\n}) => (\n  <Row gap={{ md: '32', sm: '16' }} width=\"full\" justifyContent=\"space-between\" alignItems=\"flex-start\" flexWrap=\"wrap\">\n    <Column width={{ sm: 'full', md: 'auto' }} gap=\"10\">\n      <Detail>\n        <DetailItemLabel>Contract Address: </DetailItemLabel>\n        <a\n          href={`https://etherscan.io/token/${contractAddress}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{ textDecoration: 'none' }}\n        >\n          <DetailItemValue>{shortenAddress(contractAddress)}</DetailItemValue>\n        </a>\n      </Detail>\n      <Detail>\n        <DetailItemLabel>Token ID:</DetailItemLabel>\n        <DetailItemValue className={bodySmall}>{tokenId}</DetailItemValue>\n      </Detail>\n      {metadataUrl ? (\n        <Detail>\n          <DetailItemLabel>Metadata:</DetailItemLabel>\n          <a href={metadataUrl} target=\"_blank\" rel=\"noreferrer\" style={{ textDecoration: 'none' }}>\n            <DetailItemValue>{metadataUrl.slice(0, 12)}...</DetailItemValue>\n          </a>\n        </Detail>\n      ) : null}\n    </Column>\n\n    <Column width={{ sm: 'full', md: 'auto' }} gap=\"10\">\n      <Detail>\n        <DetailItemLabel>Contract type:</DetailItemLabel>\n        <DetailItemValue>{tokenType}</DetailItemValue>\n      </Detail>\n      <Detail>\n        <DetailItemLabel>Total supply:</DetailItemLabel>\n        <DetailItemValue>{totalSupply}</DetailItemValue>\n      </Detail>\n      <Detail>\n        <DetailItemLabel>Blockchain:</DetailItemLabel>\n        <DetailItemValue>{blockchain}</DetailItemValue>\n      </Detail>\n    </Column>\n  </Row>\n)\n","import { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\n\nimport { Details } from '../../components/details/Details'\nimport { fetchSingleAsset } from '../../queries'\nimport { CollectionInfoForAsset, GenieAsset } from '../../types'\n\nconst Asset = () => {\n  const { tokenId = '', contractAddress = '' } = useParams()\n\n  const { data } = useQuery(['assetDetail', contractAddress, tokenId], () =>\n    fetchSingleAsset({ contractAddress, tokenId })\n  )\n\n  let asset = {} as GenieAsset\n  let collection = {} as CollectionInfoForAsset\n\n  if (data) {\n    asset = data[0] || {}\n    collection = data[1] || {}\n  }\n\n  return (\n    <div>\n      {' '}\n      <Details\n        contractAddress={contractAddress}\n        tokenId={tokenId}\n        tokenType={asset.tokenType}\n        blockchain=\"Ethereum\"\n        metadataUrl={asset.externalLink}\n        totalSupply={collection.totalSupply}\n      />\n    </div>\n  )\n}\n\nexport default Asset\n"],"sourceRoot":""}